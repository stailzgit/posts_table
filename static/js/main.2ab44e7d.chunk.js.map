{"version":3,"sources":["API/PostService.js","hooks/usePagination.js","components/Pagination.jsx","components/PostTable.jsx","components/Loader.jsx","components/Filters.jsx","hooks/useDebounceSearch.js","hooks/usePostsSearch.js","pages/Posts.jsx","hooks/useFetching.js","App.js","index.js"],"names":["PostService","limit","page","query","sort","title","orderByASC","axios","get","params","q","_limit","_page","_sort","_order","response","DOTS","range","start","end","length","Array","from","_","idx","Pagination","props","onPageChange","totalCount","siblingCount","currentPage","pageSize","paginationRange","useMemo","totalPageCount","Math","ceil","leftSiblingIndex","max","rightSiblingIndex","min","shouldShowLeftDots","shouldShowRightDots","firstPageIndex","lastPageIndex","leftRange","rightRange","middleRange","usePagination","console","log","lastPage","styleBtn","className","onClick","map","pageNumber","index","PostTable","posts","setSort","debouncedSearch","isPostsLoading","ArrowSortUI","isCurrentTitle","styleArrow","text","item","prev","post","tableBodyData","id","toString","body","cell","searchWords","textToHighlight","LoaderSearch","CircularProgress","size","Filters","React","memo","search","onSearchChange","resetSearch","setLimit","isEmptySearch","Paper","sx","backgroundColor","borderRadius","width","minWidth","display","InputBase","value","onChange","ml","color","placeholder","IconButton","htmlColor","FormControl","m","position","InputLabel","Select","defaultValue","label","event","target","MenuItem","useDebounce","delay","useState","debouncedValue","setDebouncedValue","useEffect","timer","setTimeout","clearTimeout","usePostsSearch","setSearch","e","currentTarget","toLowerCase","Posts","navigate","useNavigate","setPosts","setTotalCount","setPage","callback","isLoading","setIsLoading","error","setError","a","args","message","useFetching","getAll","data","_totalCount","headers","fetchPosts","postsError","App","ReactDOM","render","CssBaseline","document","getElementById"],"mappings":"qSAEqBA,E,kIACnB,+GACEC,EADF,+BACU,GACRC,EAFF,+BAES,EACPC,EAHF,+BAGU,GACRC,EAJF,+BAIS,CAAEC,MAAO,KAAMC,YAAY,GAJpC,SAMyBC,IAAMC,IAAN,6CAErB,CACEC,OAAQ,CACNC,EAAGP,EACHQ,OAAQV,EACRW,MAAOV,EACPW,MAAOT,EAAKC,MACZS,OAAQV,EAAKE,WAAa,MAAQ,UAd1C,cAMQS,EANR,yBAkBSA,GAlBT,2C,6DCAWC,EAAO,MAEdC,EAAQ,SAACC,EAAOC,GACpB,IAAIC,EAASD,EAAMD,EAAQ,EAC3B,OAAOG,MAAMC,KAAK,CAAEF,WAAU,SAACG,EAAGC,GAAJ,OAAYA,EAAMN,M,OC4DnCO,EAhEI,SAACC,GAClB,IACEC,EAKED,EALFC,aACAC,EAIEF,EAJFE,WAFF,EAMIF,EAHFG,oBAHF,MAGiB,EAHjB,EAIEC,EAEEJ,EAFFI,YACAC,EACEL,EADFK,SAEIC,EDDqB,SAAC,GAKvB,IAJLJ,EAII,EAJJA,WACAG,EAGI,EAHJA,SAGI,IAFJF,oBAEI,MAFW,EAEX,EADJC,EACI,EADJA,YAuDA,OArDwBG,mBAAQ,WAC9B,IAAMC,EAAiBC,KAAKC,KAAKR,EAAaG,GAS9C,GANyBF,EAAe,GAMhBK,EACtB,OAAOjB,EAAM,EAAGiB,GAGlB,IAAMG,EAAmBF,KAAKG,IAAIR,EAAcD,EAAc,GACxDU,EAAoBJ,KAAKK,IAC7BV,EAAcD,EACdK,GAQIO,EAAqBJ,EAAmB,EACxCK,EAAsBH,EAAoBL,EAAiB,EAE3DS,EAAiB,EACjBC,EAAgBV,EAEtB,IAAKO,GAAsBC,EAAqB,CAC9C,IACIG,EAAY5B,EAAM,EADF,EAAI,EAAIY,GAG5B,MAAM,GAAN,mBAAWgB,GAAX,CAAsB7B,EAAMkB,IAG9B,GAAIO,IAAuBC,EAAqB,CAC9C,IACII,EAAa7B,EACfiB,GAFmB,EAAI,EAAIL,GAEO,EAClCK,GAEF,MAAM,CAAES,EAAgB3B,GAAxB,mBAAiC8B,IAGnC,GAAIL,GAAsBC,EAAqB,CAC7C,IAAIK,EAAc9B,EAAMoB,EAAkBE,GAC1C,MAAM,CAAEI,EAAgB3B,GAAxB,mBAAiC+B,GAAjC,CAA8C/B,EAAM4B,OAErD,CAAChB,EAAYG,EAAUF,EAAcC,ICxDhBkB,CAAc,CACpClB,cACAF,aACAC,eACAE,aAIF,GADAkB,QAAQC,IAAI,kBAAmBlB,GAC3BA,EAAgBZ,QAAU,EAAG,OAAO,6BAExC,IAAM+B,EAAWnB,EAAgBA,EAAgBZ,OAAS,GAEpDgC,EAAW,SAAClD,GAAD,MACf,oBAAsB4B,IAAgB5B,GAAQ,6BAahD,OACE,sBAAKmD,UAAU,uBAAf,UACE,qBAAKA,UAAWD,EAAS,GAAIE,QANd,WACG,IAAhBxB,GAAmBH,EAAaG,EAAc,IAKhD,4CAIA,qBAAKuB,UAAU,oBAAf,SACGrB,EAAgBuB,KAAI,SAACC,EAAYC,GAAb,OACnB,8BACGD,IAAexC,EACd,qBAAKqC,UAAU,mBAAf,oBAEA,qBACEA,WAxBSnD,EAwBgBsD,EAvBrC,qBAAuB1B,IAAgB5B,GAAQ,8BAwBnCoD,QAAS,kBAAM3B,EAAa6B,IAF9B,SAIGA,KARGC,GAnBI,IAACvD,OAkCnB,qBAAKmD,UAAWD,EAASD,GAAWG,QA/BzB,WACTxB,IAAgBqB,GAAUxB,EAAaG,EAAc,IA8BvD,gD,yBCwBS4B,EA/EG,SAAChC,GACjB,IAAQiC,EAA0DjC,EAA1DiC,MAAOvD,EAAmDsB,EAAnDtB,KAAMwD,EAA6ClC,EAA7CkC,QAASC,EAAoCnC,EAApCmC,gBAAiBC,EAAmBpC,EAAnBoC,eAEzCC,EAAc,SAAC1D,GACnB,IAAM2D,EAAiB3D,IAAUD,EAAKC,MAChC4D,EAAaD,EAAiB,0BAA4B,GAEhE,OACE,qBAAKX,UAAU,mBAAf,SACGW,IAAmB5D,EAAKE,WACvB,cAAC,IAAD,CAAc+C,UAAWY,IAEzB,cAAC,IAAD,CAAgBZ,UAAWY,OAqBnC,OAAKN,EAAMvC,QAAW0C,EAEjBH,EAAMvC,OAGT,wBAAOiC,UAAU,QAAjB,UACE,gCACE,oBAAIA,UAAU,cAAd,SAbgB,CACpB,CAAEhD,MAAO,KAAM6D,KAAM,KAAMb,UAAW,kBACtC,CAAEhD,MAAO,QAAS6D,KAAM,yDAAab,UAAW,qBAChD,CAAEhD,MAAO,OAAQ6D,KAAM,mDAAYb,UAAW,qBAWzBE,KAAI,SAACY,GAAD,OACjB,qBACEd,UAAWc,EAAKd,UAChBC,QAAS,kBA1BCjD,EA0BkB8D,EAAK9D,WAzB3CuD,GAAQ,SAACQ,GAAD,MAAW,CACjB/D,QAGAC,aAAc8D,EAAK/D,QAAUA,GAAS+D,EAAK9D,gBAL1B,IAACD,GAwBZ,UAKG8D,EAAKD,KALR,IAKeH,EAAYI,EAAK9D,SAFzB8D,EAAK9D,cAQlB,gCACGsD,EAAMJ,KAAI,SAACc,GACV,IAAMC,EAAgB,CACpB,CAAEjB,UAAW,iBAAkBa,KAAMG,EAAKE,GAAGC,YAC7C,CAAEnB,UAAW,oBAAqBa,KAAMG,EAAKhE,OAC7C,CAAEgD,UAAW,mBAAoBa,KAAMG,EAAKI,OAE9C,OACE,oBAAIpB,UAAU,aAAd,SACGiB,EAAcf,KAAI,SAACmB,GAAD,OACjB,oBAAIrB,UAAWqB,EAAKrB,UAApB,SAEE,cAAC,IAAD,CACEsB,YAAa,CAACd,GACde,gBAAiBF,EAAKR,QAJUQ,EAAKrB,UAAYgB,EAAKE,QAF9BF,EAAKE,YA1BrB,6BAFmB,gI,SCnChC,SAASM,IACtB,OAAO,cAACC,EAAA,EAAD,CAAkBC,KAAM,K,oGCiFlBC,EArECC,IAAMC,MAAK,SAACxD,GAC1B,IACEyD,EAOEzD,EAPFyD,OACAC,EAME1D,EANF0D,eACAC,EAKE3D,EALF2D,YACApF,EAIEyB,EAJFzB,MACAqF,EAGE5D,EAHF4D,SACAxB,EAEEpC,EAFFoC,eACAyB,EACE7D,EADF6D,cAQF,OACE,sBAAKlC,UAAU,gBAAf,UAEE,eAACmC,EAAA,EAAD,CACEC,GAAI,CACFC,gBAAiB,UACjBC,aAAc,MACdC,MAAO,QACPC,SAAU,QACVC,QAAS,QANb,UASE,cAACC,EAAA,EAAD,CACEC,MAAOb,EACPc,SAAUb,EACVK,GAAI,CAAES,GAAI,EAAGC,MAAO,OAAQP,MAAO,QACnCQ,YAAY,mCAEd,eAACC,EAAA,EAAD,CAAY/C,QAvBG,WACJ,KAAX6B,GACJE,KAqBI,UACGvB,GAAkB,cAACe,EAAD,KACjBf,GAAkBqB,GAAU,cAAC,IAAD,CAAemB,UAAU,aACrDxC,IAAmBqB,GAAU,cAAC,IAAD,CAAYmB,UAAU,eAKzD,eAACC,EAAA,EAAD,CACExB,KAAK,QACLU,GAAI,CACFe,EAAG,GACHX,SAAU,GACVY,SAAU,WACVX,QAAQ,GAAD,OAAKP,EAAgB,OAAS,UANzC,UASE,cAACmB,EAAA,EAAD,+DACA,eAACC,EAAA,EAAD,CACEC,aAAc,GACdZ,MAAO/F,EACPsE,GAAG,2BACHsC,MAAM,mDACNZ,SAAU,SAACa,GAAD,OAAWxB,EAASwB,EAAMC,OAAOf,QAC3CP,GAAI,CAAEI,SAAU,IANlB,UAQE,cAACmB,EAAA,EAAD,CAAUhB,MAAO,GAAjB,gBACA,cAACgB,EAAA,EAAD,CAAUhB,MAAO,GAAjB,gBACA,cAACgB,EAAA,EAAD,CAAUhB,MAAO,IAAjB,4CC9DKiB,EAdK,SAACjB,GAAwB,IAAjBkB,EAAgB,uDAAR,IAClC,EAA4CC,mBAASnB,GAArD,mBAAOoB,EAAP,KAAuBC,EAAvB,KAUA,OARAC,qBAAU,WACR,IAAMC,EAAQC,YAAW,kBAAMH,EAAkBrB,KAAQkB,GAEzD,OAAO,WACLO,aAAaF,MAEd,CAACvB,EAAOkB,IAEJE,GCUMM,EApBQ,WACrB,MAA4BP,mBAAS,IAArC,mBAAOhC,EAAP,KAAewC,EAAf,KAWA,MAAO,CACLxC,SACAtB,gBAZqBoD,EAAY9B,GAajCC,eAXqB,SAACwC,GACtBD,EAAUC,EAAEC,cAAc7B,MAAM8B,gBAWhCzC,YARkB,WAClBsC,EAAU,O,QCoECI,EApED,WACZ,IAAMC,EAAWC,cACjB,EAA0Bd,mBAAS,IAAnC,mBAAOxD,EAAP,KAAcuE,EAAd,KACA,EACER,IADMvC,EAAR,EAAQA,OAAQtB,EAAhB,EAAgBA,gBAAiBuB,EAAjC,EAAiCA,eAAgBC,EAAjD,EAAiDA,YAEjD,EAAwB8B,mBAAS,CAAE9G,MAAO,KAAMC,YAAY,IAA5D,mBAAOF,EAAP,KAAawD,EAAb,KACA,EAAoCuD,mBAAS,GAA7C,mBAAOvF,EAAP,KAAmBuG,EAAnB,KACA,EAA0BhB,mBAAS,IAAnC,mBAAOlH,EAAP,KAAcqF,EAAd,KACA,EAAwB6B,mBAAS,GAAjC,mBAAOjH,EAAP,KAAakI,EAAb,KAGA,ECrByB,SAACC,GAC1B,MAAkClB,oBAAS,GAA3C,mBAAOmB,EAAP,KAAkBC,EAAlB,KACA,EAA0BpB,mBAAS,IAAnC,mBAAOqB,EAAP,KAAcC,EAAd,KAeA,MAAO,CAbO,uCAAG,4CAAAC,EAAA,qEAAUC,EAAV,yBAAUA,EAAV,QACfJ,GAAa,GACbf,WAAU,sBAAC,sBAAAkB,EAAA,+EAEDL,EAAQ,WAAR,EAAYM,GAFX,sDAIPF,EAAS,KAAEG,SAJJ,uBAMPL,GAAa,GANN,0EAQR,KAVY,2CAAH,qDAaID,EAAWE,GDIoBK,CAAW,uCAC1D,WAAO5I,EAAOC,EAAMC,EAAOC,GAA3B,iBAAAsI,EAAA,sEACyB1I,EAAY8I,OAAO7I,EAAOC,EAAMC,EAAOC,GADhE,OACQW,EADR,OAEEmH,EAAS,YAAInH,EAASgI,OAChBC,EAAcjI,EAASkI,QAAQ,iBACrCd,EAAca,GAJhB,2CAD0D,6DAA5D,mBAAOE,EAAP,KAAmBpF,EAAnB,KAAmCqF,EAAnC,KAwBA,OAdA7B,qBAAU,WACR4B,EAAWjJ,EAAOC,EAAM2D,EAAiBzD,GACzCgI,EAAQ,KACP,CAACnI,EAAO4D,IAEXyD,qBAAU,WACR4B,EAAWjJ,EAAOC,EAAM2D,EAAiBzD,KACxC,CAACF,EAAME,IAGVkH,qBAAU,WACRU,EAAS,GAAD,OAAI9H,MACX,CAACA,IAEAiJ,EAAmB,+HAAuBA,KAG5C,sBAAK9F,UAAU,6BAAf,UACE,cAAC,EAAD,CACE8B,OAAQA,EACRC,eAAgBA,EAChBC,YAAaA,EACbpF,MAAOA,EACPqF,SAAUA,EACVxB,eAAgBA,EAChByB,eAAgB5B,EAAMvC,SAGxB,cAAC,EAAD,CACEyC,gBAAiBA,EACjBzD,KAAMA,EACNwD,QAASA,EACTD,MAAOA,EACPG,eAAgBA,IAGlB,cAAC,EAAD,CACET,UAAU,iBACVvB,YAAa5B,EACb0B,WAAYA,EACZG,SAAU9B,EACV0B,aAAc,SAACzB,GAAD,OAAUkI,EAAQlI,UElEzBkJ,MAJf,WACE,OAAO,cAAC,EAAD,KCCTC,IAASC,OACP,eAAC,IAAD,WACE,cAACC,EAAA,EAAD,IACA,cAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.2ab44e7d.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport default class PostService {\n  static async getAll(\n    limit = 10,\n    page = 1,\n    query = \"\",\n    sort = { title: \"id\", orderByASC: true }\n  ) {\n    const response = await axios.get(\n      `https://jsonplaceholder.typicode.com/posts`,\n      {\n        params: {\n          q: query,\n          _limit: limit,\n          _page: page,\n          _sort: sort.title,\n          _order: sort.orderByASC ? \"asc\" : \"desc\",\n        },\n      }\n    );\n    return response;\n  }\n}\n","import React from \"react\";\nimport { useMemo } from \"react\";\n\nexport const DOTS = \"...\";\n\nconst range = (start, end) => {\n  let length = end - start + 1;\n  return Array.from({ length }, (_, idx) => idx + start);\n};\n\nexport const usePagination = ({\n  totalCount,\n  pageSize,\n  siblingCount = 1,\n  currentPage,\n}) => {\n  const paginationRange = useMemo(() => {\n    const totalPageCount = Math.ceil(totalCount / pageSize);\n\n    // Pages count is determined as siblingCount + firstPage + lastPage + currentPage + 2*DOTS\n    const totalPageNumbers = siblingCount + 5;\n\n    /*\n      If the number of pages is less than the page numbers we want to show in our\n      paginationComponent, we return the range [1..totalPageCount]\n    */\n    if (totalPageNumbers >= totalPageCount) {\n      return range(1, totalPageCount);\n    }\n\n    const leftSiblingIndex = Math.max(currentPage - siblingCount, 1);\n    const rightSiblingIndex = Math.min(\n      currentPage + siblingCount,\n      totalPageCount\n    );\n\n    /*\n      We do not want to show dots if there is only one position left \n      after/before the left/right page count as that would lead to a change if our Pagination\n      component size which we do not want\n    */\n    const shouldShowLeftDots = leftSiblingIndex > 2;\n    const shouldShowRightDots = rightSiblingIndex < totalPageCount - 2;\n\n    const firstPageIndex = 1;\n    const lastPageIndex = totalPageCount;\n\n    if (!shouldShowLeftDots && shouldShowRightDots) {\n      let leftItemCount = 3 + 2 * siblingCount;\n      let leftRange = range(1, leftItemCount);\n\n      return [...leftRange, DOTS, totalPageCount];\n    }\n\n    if (shouldShowLeftDots && !shouldShowRightDots) {\n      let rightItemCount = 3 + 2 * siblingCount;\n      let rightRange = range(\n        totalPageCount - rightItemCount + 1,\n        totalPageCount\n      );\n      return [firstPageIndex, DOTS, ...rightRange];\n    }\n\n    if (shouldShowLeftDots && shouldShowRightDots) {\n      let middleRange = range(leftSiblingIndex, rightSiblingIndex);\n      return [firstPageIndex, DOTS, ...middleRange, DOTS, lastPageIndex];\n    }\n  }, [totalCount, pageSize, siblingCount, currentPage]);\n\n  return paginationRange;\n};\n","import React from \"react\";\nimport { usePagination, DOTS } from \"../hooks/usePagination\";\n\nconst Pagination = (props) => {\n  const {\n    onPageChange,\n    totalCount,\n    siblingCount = 1,\n    currentPage,\n    pageSize,\n  } = props;\n  const paginationRange = usePagination({\n    currentPage,\n    totalCount,\n    siblingCount,\n    pageSize,\n  });\n\n  console.log(\"paginationRange\", paginationRange);\n  if (paginationRange.length <= 1) return <></>;\n\n  const lastPage = paginationRange[paginationRange.length - 1];\n\n  const styleBtn = (page) =>\n    \"pagination__btn \" + (currentPage === page && \"pagination__btn_disabled\");\n\n  const stylePageItem = (page) =>\n    \"pagination__item \" + (currentPage === page && \"pagination__item_selected\");\n\n  const onNext = () => {\n    if (currentPage !== lastPage) onPageChange(currentPage + 1);\n  };\n\n  const onPrevious = () => {\n    if (currentPage !== 1) onPageChange(currentPage - 1);\n  };\n\n  return (\n    <div className=\"pagination-container\">\n      <div className={styleBtn(1)} onClick={onPrevious}>\n        Назад\n      </div>\n\n      <div className=\"pagination__items\">\n        {paginationRange.map((pageNumber, index) => (\n          <div key={index}>\n            {pageNumber === DOTS ? (\n              <div className=\"pagination__dots\">&#8230;</div>\n            ) : (\n              <div\n                className={stylePageItem(pageNumber)}\n                onClick={() => onPageChange(pageNumber)}\n              >\n                {pageNumber}\n              </div>\n            )}\n          </div>\n        ))}\n      </div>\n\n      <div className={styleBtn(lastPage)} onClick={onNext}>\n        Далее\n      </div>\n    </div>\n  );\n};\n\nexport default Pagination;\n","import React from \"react\";\nimport Highlighter from \"react-highlight-words\";\nimport { IoIosArrowDown } from \"react-icons/io\";\nimport { IoIosArrowUp } from \"react-icons/io\";\n\nconst PostTable = (props) => {\n  const { posts, sort, setSort, debouncedSearch, isPostsLoading } = props;\n\n  const ArrowSortUI = (title) => {\n    const isCurrentTitle = title === sort.title;\n    const styleArrow = isCurrentTitle ? \"table__sort-icon_active\" : \"\";\n\n    return (\n      <div className=\"table__sort-wrap\">\n        {isCurrentTitle && !sort.orderByASC ? (\n          <IoIosArrowUp className={styleArrow} />\n        ) : (\n          <IoIosArrowDown className={styleArrow} />\n        )}\n      </div>\n    );\n  };\n\n  const onChangeSort = (title) => {\n    setSort((prev) => ({\n      title,\n      //Если нажать текущий title, то меняем на противоположную сортировку.\n      //Eсли нажать другой title, то сортировка становится в true (ASC).\n      orderByASC: !(prev.title === title && prev.orderByASC),\n    }));\n  };\n\n  const tableHeadData = [\n    { title: \"id\", text: \"ID\", className: \"table__head-id\" },\n    { title: \"title\", text: \"Заголовок\", className: \"table__head-title\" },\n    { title: \"body\", text: \"Описание\", className: \"table__head-body\" },\n  ];\n\n  if (!posts.length && !isPostsLoading) return <div>Ничего не найдено</div>;\n\n  if (!posts.length) return <></>;\n\n  return (\n    <table className=\"table\">\n      <thead>\n        <tr className=\"table__head\">\n          {tableHeadData.map((item) => (\n            <th\n              className={item.className}\n              onClick={() => onChangeSort(item.title)}\n              key={item.title}\n            >\n              {item.text} {ArrowSortUI(item.title)}\n            </th>\n          ))}\n        </tr>\n      </thead>\n\n      <tbody>\n        {posts.map((post) => {\n          const tableBodyData = [\n            { className: \"table__cell-id\", text: post.id.toString() },\n            { className: \"table__cell-title\", text: post.title },\n            { className: \"table__cell-body\", text: post.body },\n          ];\n          return (\n            <tr className=\"table__row\" key={post.id}>\n              {tableBodyData.map((cell) => (\n                <td className={cell.className} key={cell.className + post.id}>\n                  {/* Обертка для выделения текста поиска */}\n                  <Highlighter\n                    searchWords={[debouncedSearch]}\n                    textToHighlight={cell.text}\n                  />\n                </td>\n              ))}\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n\nexport default PostTable;\n","import * as React from \"react\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\n\nexport default function LoaderSearch() {\n  return <CircularProgress size={24} />;\n}\n","import React from \"react\";\nimport LoaderSearch from \"./Loader\";\n//MUI Icons\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport BackspaceIcon from \"@mui/icons-material/Backspace\";\n//MUI Components\nimport {\n  IconButton,\n  InputBase,\n  Paper,\n  Select,\n  FormControl,\n  InputLabel,\n  MenuItem,\n} from \"@mui/material\";\n\nconst Filters = React.memo((props) => {\n  const {\n    search,\n    onSearchChange,\n    resetSearch,\n    limit,\n    setLimit,\n    isPostsLoading,\n    isEmptySearch,\n  } = props;\n\n  const onResetClick = () => {\n    if (search === \"\") return;\n    resetSearch();\n  };\n\n  return (\n    <div className=\"filters__wrap\">\n      {/********** Поиск **********/}\n      <Paper\n        sx={{\n          backgroundColor: \"#5A5C66\",\n          borderRadius: \"0px\",\n          width: \"480px\",\n          minWidth: \"240px\",\n          display: \"flex\",\n        }}\n      >\n        <InputBase\n          value={search}\n          onChange={onSearchChange}\n          sx={{ ml: 3, color: \"#fff\", width: \"100%\" }}\n          placeholder=\"Поиск\"\n        />\n        <IconButton onClick={onResetClick}>\n          {isPostsLoading && <LoaderSearch />}\n          {!isPostsLoading && search && <BackspaceIcon htmlColor=\"#ed8282\" />}\n          {!isPostsLoading && !search && <SearchIcon htmlColor=\"#fff\" />}\n        </IconButton>\n      </Paper>\n\n      {/********** Количество постов **********/}\n      <FormControl\n        size=\"small\"\n        sx={{\n          m: 0.5,\n          minWidth: 80,\n          position: \"relative\",\n          display: `${isEmptySearch ? \"none\" : \"block\"}`,\n        }}\n      >\n        <InputLabel>Показать</InputLabel>\n        <Select\n          defaultValue={10}\n          value={limit}\n          id=\"outlined-read-only-input\"\n          label=\"Показать\"\n          onChange={(event) => setLimit(event.target.value)}\n          sx={{ minWidth: 80 }}\n        >\n          <MenuItem value={10}>10</MenuItem>\n          <MenuItem value={25}>25</MenuItem>\n          <MenuItem value={100}>Все</MenuItem>\n        </Select>\n      </FormControl>\n    </div>\n  );\n});\n\nexport default Filters;\n","import { useEffect, useState } from \"react\";\n\nconst useDebounce = (value, delay = 500) => {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(() => {\n    const timer = setTimeout(() => setDebouncedValue(value), delay);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [value, delay]);\n\n  return debouncedValue;\n};\n\nexport default useDebounce;\n","import { useState } from \"react\";\nimport useDebounce from \"./useDebounceSearch.js\";\n\nconst usePostsSearch = () => {\n  const [search, setSearch] = useState(\"\");\n  const debouncedValue = useDebounce(search);\n\n  const onSearchChange = (e) => {\n    setSearch(e.currentTarget.value.toLowerCase());\n  };\n\n  const resetSearch = () => {\n    setSearch(\"\");\n  };\n\n  return {\n    search,\n    debouncedSearch: debouncedValue,\n    onSearchChange,\n    resetSearch,\n  };\n};\n\nexport default usePostsSearch;\n","import React, { useEffect, useState } from \"react\";\n//API\nimport PostService from \"../API/PostService\";\n//Components\nimport Pagination from \"../components/Pagination\";\nimport PostTable from \"../components/PostTable\";\nimport Filters from \"../components/Filters\";\n//Hooks\nimport usePostsSearch from \"../hooks/usePostsSearch\";\nimport { useFetching } from \"../hooks/useFetching\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst Posts = () => {\n  const navigate = useNavigate();\n  const [posts, setPosts] = useState([]);\n  const { search, debouncedSearch, onSearchChange, resetSearch } =\n    usePostsSearch();\n  const [sort, setSort] = useState({ title: \"id\", orderByASC: true });\n  const [totalCount, setTotalCount] = useState(0);\n  const [limit, setLimit] = useState(10);\n  const [page, setPage] = useState(1);\n\n  //Hook для обработки Loading и Error запроса\n  const [fetchPosts, isPostsLoading, postsError] = useFetching(\n    async (limit, page, query, sort) => {\n      const response = await PostService.getAll(limit, page, query, sort);\n      setPosts([...response.data]);\n      const _totalCount = response.headers[\"x-total-count\"];\n      setTotalCount(_totalCount);\n    }\n  );\n\n  //Вернуться к 1 странице при изменении limit\n  useEffect(() => {\n    fetchPosts(limit, page, debouncedSearch, sort);\n    setPage(1);\n  }, [limit, debouncedSearch]);\n\n  useEffect(() => {\n    fetchPosts(limit, page, debouncedSearch, sort);\n  }, [page, sort]);\n\n  //Показать страницу таблицы в URL\n  useEffect(() => {\n    navigate(`${page}`);\n  }, [page]);\n\n  if (postsError) return <h1>Произошла ошибка ${postsError}</h1>;\n\n  return (\n    <div className=\"posts__container container\">\n      <Filters\n        search={search}\n        onSearchChange={onSearchChange}\n        resetSearch={resetSearch}\n        limit={limit}\n        setLimit={setLimit}\n        isPostsLoading={isPostsLoading}\n        isEmptySearch={!posts.length}\n      />\n\n      <PostTable\n        debouncedSearch={debouncedSearch}\n        sort={sort}\n        setSort={setSort}\n        posts={posts}\n        isPostsLoading={isPostsLoading}\n      />\n\n      <Pagination\n        className=\"pagination-bar\"\n        currentPage={page}\n        totalCount={totalCount}\n        pageSize={limit}\n        onPageChange={(page) => setPage(page)}\n      />\n    </div>\n  );\n};\n\nexport default Posts;\n","import { useState } from \"react\";\n\nexport const useFetching = (callback) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  const fetching = async (...args) => {\n    setIsLoading(true);\n    setTimeout(async () => {\n      try {\n        await callback(...args);\n      } catch (e) {\n        setError(e.message);\n      } finally {\n        setIsLoading(false);\n      }\n    }, 200);\n  };\n\n  return [fetching, isLoading, error];\n};\n","import React from \"react\";\nimport \"./styles/root.css\";\nimport Posts from \"./pages/Posts\";\n\nfunction App() {\n  return <Posts />;\n}\n\nexport default App;\n","import { CssBaseline } from \"@mui/material\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <HashRouter>\n    <CssBaseline />\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}